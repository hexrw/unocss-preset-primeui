name: CI & Release
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Lint
        run: bun run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Test
        run: bun run test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Build
        run: bun run build

  release:
    name: Release & Publish
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Build
        run: bun run build
      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          release-type: node
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Pack tarball with Bun
        if: steps.release.outputs.release_created == 'true'
        run: bun pm pack --filename package.tgz
      - name: Create GitHub Release with tarball
        if: steps.release.outputs.release_created == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release.outputs.tag_name }}
          name: Release ${{ steps.release.outputs.tag_name }}
          body: ${{ steps.release.outputs.changelog }}
          prerelease: ${{ contains(steps.release.outputs.tag_name, '-') }}
          files: package.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check for NPM_TOKEN
        if: steps.release.outputs.release_created == 'true'
        run: |
          if [ -z "${NPM_TOKEN}" ]; then
            echo "::error::NPM_TOKEN secret is not set. Please add it to your repository secrets to enable npm publishing."
            exit 1
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Setup npm authentication
        if: steps.release.outputs.release_created == 'true'
        run: |
          echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish to npm (with Bun)
        if: steps.release.outputs.release_created == 'true'
        run: |
          if [[ "${{ steps.release.outputs.tag_name }}" == *-* ]]; then
            bun publish --tag beta --access public
          else
            bun publish --access public
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
